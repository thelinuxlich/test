/**
 * This file is auto-generated by kysely-codegen
 * DO NOT EDIT MANUALLY
 * 
 * To regenerate this file:
 * 1. Ensure the PostgreSQL database is running
 * 2. Run: npm run db:generate
 * 
 * For watch mode (auto-regenerate on schema changes):
 * npm run db:generate:watch
 */

import { ColumnType } from 'kysely';

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface AccessControls {
  id: Generated<number>;
  name: string;
  path: string;
  icon: string | null;
  parentPath: string | null;
  hierarchyId: number | null;
  type: string | null;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface Classes {
  id: Generated<number>;
  name: string;
  sections: number | null;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface Departments {
  id: Generated<number>;
  name: string;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface LeavePolicies {
  id: Generated<number>;
  name: string;
  totalDays: number;
  isActive: Generated<boolean>;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface LeaveStatus {
  id: Generated<number>;
  name: string;
  alias: string;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface NoticeRecipientTypes {
  id: Generated<number>;
  roleId: number | null;
  primaryDependentName: string | null;
  primaryDependentSelect: string | null;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface NoticeStatus {
  id: Generated<number>;
  name: string;
  alias: string;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface Notices {
  id: Generated<number>;
  title: string;
  description: string | null;
  authorId: number;
  status: number;
  recipientType: string;
  recipientRoleId: number | null;
  recipientFirstField: string | null;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
  reviewedDt: Timestamp | null;
  reviewerId: number | null;
}

export interface Permissions {
  id: Generated<number>;
  roleId: number;
  accessControlId: number;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface Roles {
  id: Generated<number>;
  name: string;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface Sections {
  id: Generated<number>;
  name: string;
}

export interface UserLeavePolicy {
  id: Generated<number>;
  userId: number;
  leavePolicyId: number;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface UserLeaves {
  id: Generated<number>;
  userId: number;
  leavePolicyId: number;
  fromDt: Timestamp;
  toDt: Timestamp;
  note: string | null;
  status: number;
  submittedDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
  approvedDt: Timestamp | null;
  approverId: number | null;
}

export interface UserProfiles {
  id: Generated<number>;
  userId: number;
  phone: string | null;
  gender: string | null;
  dob: Timestamp | null;
  className: string | null;
  sectionName: string | null;
  roll: number | null;
  fatherName: string | null;
  fatherPhone: string | null;
  motherName: string | null;
  motherPhone: string | null;
  guardianName: string | null;
  guardianPhone: string | null;
  relationOfGuardian: string | null;
  currentAddress: string | null;
  permanentAddress: string | null;
  admissionDt: Timestamp | null;
  maritalStatus: string | null;
  joinDt: Timestamp | null;
  qualification: string | null;
  experience: string | null;
  emergencyPhone: string | null;
  departmentId: number | null;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface UserRefreshTokens {
  id: Generated<number>;
  userId: number;
  token: string;
  expiresAt: Timestamp;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
}

export interface Users {
  id: Generated<number>;
  name: string;
  email: string;
  password: string | null;
  lastLogin: Timestamp | null;
  roleId: number;
  createdDt: Generated<Timestamp>;
  updatedDt: Generated<Timestamp>;
  leavePolicyId: number | null;
  isActive: Generated<boolean>;
  reporterId: number | null;
  statusLastReviewedDt: Timestamp | null;
  statusLastReviewerId: number | null;
  isEmailVerified: Generated<boolean>;
}

export interface DB {
  accessControls: AccessControls;
  classes: Classes;
  departments: Departments;
  leavePolicies: LeavePolicies;
  leaveStatus: LeaveStatus;
  noticeRecipientTypes: NoticeRecipientTypes;
  noticeStatus: NoticeStatus;
  notices: Notices;
  permissions: Permissions;
  roles: Roles;
  sections: Sections;
  userLeavePolicy: UserLeavePolicy;
  userLeaves: UserLeaves;
  userProfiles: UserProfiles;
  userRefreshTokens: UserRefreshTokens;
  users: Users;
}

